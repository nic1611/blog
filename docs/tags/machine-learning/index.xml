<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>machine learning on Q.G do Tux</title>
    <link>https://nic1611.github.io/blog/tags/machine-learning/</link>
    <description>Recent content in machine learning on Q.G do Tux</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 23 Oct 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://nic1611.github.io/blog/tags/machine-learning/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>classificação com KNN da base de dados breast_cancer</title>
      <link>https://nic1611.github.io/blog/post/cancer_de_mama/</link>
      <pubDate>Sat, 23 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://nic1611.github.io/blog/post/cancer_de_mama/</guid>
      <description>0 - Carregando bibliotecas Nessa etapa, costuma-se dedicar a importação das bibliotecas que serão utilizadas no desenvolvimento do algoritmo de predição
from sklearn.datasets import load_breast_cancer from sklearn.neighbors import KNeighborsClassifier from sklearn.model_selection import train_test_split from sklearn.preprocessing import StandardScaler import matplotlib.pylab as plt 1 - Abertura do dados Aqui, é feito o carregamento dos dados que serão utlizados para treino e teste do algoritmo
cancer = load_breast_cancer() cancer.DESCR &#39;.. _breast_cancer_dataset:\n\nBreast cancer wisconsin (diagnostic) dataset\n--------------------------------------------\n\n**Data Set Characteristics:**\n\n :Number of Instances: 569\n\n :Number of Attributes: 30 numeric, predictive attributes and the class\n\n :Attribute Information:\n - radius (mean of distances from center to points on the perimeter)\n - texture (standard deviation of gray-scale values)\n - perimeter\n - area\n - smoothness (local variation in radius lengths)\n - compactness (perimeter^2 / area - 1.</description>
    </item>
    
    <item>
      <title>Métricas de avaliação de maquinas preditivas</title>
      <link>https://nic1611.github.io/blog/post/metricas_de_avaliacao/</link>
      <pubDate>Fri, 30 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://nic1611.github.io/blog/post/metricas_de_avaliacao/</guid>
      <description>Métricas de avaliação de maquinas preditivas Métricas de avaliação para problemas de Classificação Confusion Matrix Confusion Matrix é uma tabela que permite a visualização do desempenho de um algoritmo de classificação.
Essa tabela de contingência 2x2 especial. Cada linha da matriz representa instâncias de uma classe prevista enquanto cada coluna representa instâncias da classe atual (ou vice versa).
Acurácia Esta é métrica mais importante. É basicamente o número de acertos (positivos) dividido pelo número total de exemplos.</description>
    </item>
    
    <item>
      <title>Machine learning para bancos</title>
      <link>https://nic1611.github.io/blog/post/machine_learning_para_bancos/</link>
      <pubDate>Tue, 23 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://nic1611.github.io/blog/post/machine_learning_para_bancos/</guid>
      <description>Personalizando as Taxas de Acordo para cada Cliente Bancos e Cooperativas de Crédito Essas são 2 de uma infinidade de empresas que oferecem vários tipos de contas e fornecem empréstimos com base nos requisitos de seus clientes. Corretoras da Bolsa ofertam diversos produtos como investimentos em mercado e os mais variados fundos de investimento.
Existem muitos bancos em todo o mundo que estão aproveitando o aprendizado de máquina e a IA em sua rotina diária e obtendo benefícios com isso.</description>
    </item>
    
  </channel>
</rss>
